name: Build Docker Image

on:
  pull_request:
  push:
    branches: [ "develop", "main" ]
    paths:
      - src/**
      - api/**
      - service/**
      - entity/**
      - migration/**
      - Cargo.toml
      - Cargo.lock
      - Dockerfile
      - .github/workflows/docker-build.yml

jobs:
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v4

      - name: Docker metadata extraction
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/retrorealm/playmatch
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push amd64
        id: docker_build_amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push arm64
        id: docker_build_arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest amd64
        run: echo ${{ steps.docker_build_amd64.outputs.digest }}

      - name: Image digest arm64
        run: echo ${{ steps.docker_build_arm64.outputs.digest }}
